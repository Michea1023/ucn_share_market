{"ast":null,"code":"import React, { useState } from \"react\";\nexport function getCookie(name) {\n  let cookieValue = null;\n\n  if (document.cookie && document.cookie !== '') {\n    const cookies = document.cookie.split(';');\n\n    for (let i = 0; i < cookies.length; i++) {\n      const cookie = cookies[i].trim(); // ¿Esta cadena de cookies comienza con el nombre que queremos?\n\n      if (cookie.substring(0, name.length + 1) === name + '=') {\n        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n        break;\n      }\n    }\n  }\n\n  return cookieValue;\n}\nexport const getRequest = async http => {\n  const response = await fetch(http);\n  const data = await response.json();\n  console.log(data);\n  return data;\n};\nexport const postRequest = async (http, header, data, type) => {\n  try {\n    const response = await fetch(http, {\n      header,\n      method: \"POST\",\n      body: data,\n      credentials: type\n    });\n    return response;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const postRequestCer = async (http, data) => {\n  try {\n    const response = await fetch(http, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"X-CSRFToken\": getCookie(\"csrftoken\")\n      },\n      method: \"POST\",\n      body: data\n    });\n    return response;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const postRequestCerForm = async (http, data) => {\n  try {\n    const response = await fetch(http, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\",\n        \"X-CSRFToken\": getCookie(\"csrftoken\")\n      },\n      method: \"POST\",\n      body: data\n    });\n    return response;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const deleteRequest = async http => {\n  try {\n    const response = await fetch(http, {\n      method: \"DELETE\",\n      headers: {\n        \"X-CSRFToken\": getCookie(\"csrftoken\")\n      }\n    });\n    return response;\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"names":["React","useState","getCookie","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","getRequest","http","response","fetch","data","json","console","log","postRequest","header","type","method","body","credentials","error","postRequestCer","headers","postRequestCerForm","deleteRequest"],"sources":["C:/Users/gasri/Documents/ucn_share_market/frontend/src/context/Request.js"],"sourcesContent":["import React, {useState} from \"react\";\r\n\r\nexport function getCookie(name) {\r\n    let cookieValue = null;\r\n    if (document.cookie && document.cookie !== '') {\r\n        const cookies = document.cookie.split(';');\r\n        for (let i = 0; i < cookies.length; i++) {\r\n            const cookie = cookies[i].trim();\r\n            // ¿Esta cadena de cookies comienza con el nombre que queremos?\r\n            if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    return cookieValue;\r\n}\r\n\r\n\r\n\r\nexport const getRequest = async (http) => {\r\n\r\n        const response = await fetch(http);\r\n        const data = await response.json();\r\n        console.log(data)\r\n        return data;\r\n\r\n}\r\n\r\n\r\nexport const postRequest = async(http,header,data,type) => {\r\n    try {\r\n       const response =await fetch(http,\r\n        {header, method: \"POST\",\r\n            body : data, credentials: type})\r\n        return response\r\n    }catch (error){\r\n        console.log(error)\r\n    }\r\n\r\n\r\n}\r\n\r\nexport const postRequestCer = async(http,data) => {\r\n    try {\r\n       const response =await fetch(http,\r\n        {headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                 \"X-CSRFToken\": getCookie(\"csrftoken\")\r\n            }, method: \"POST\",\r\n            body : data})\r\n        return response\r\n    }catch (error){\r\n        console.log(error)\r\n    }\r\n}\r\nexport const postRequestCerForm = async(http,data) => {\r\n    try {\r\n       const response =await fetch(http,\r\n        {headers: {\r\n                \"Content-Type\": \"multipart/form-data\",\r\n                 \"X-CSRFToken\": getCookie(\"csrftoken\")\r\n            }, method: \"POST\",\r\n            body : data})\r\n        return response\r\n    }catch (error){\r\n        console.log(error)\r\n    }\r\n}\r\nexport const deleteRequest = async(http) => {\r\n    try {\r\n       const response =await fetch(http, {method: \"DELETE\",headers: {\r\n                 \"X-CSRFToken\": getCookie(\"csrftoken\")\r\n            }})\r\n        return response\r\n    }catch (error){\r\n        console.log(error)\r\n    }\r\n}\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}